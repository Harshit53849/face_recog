import cv2
import numpy as np
import face_recognition
import os
from datetime import datetime


path = 'temp'
images=[]
classnames=[]
mylist = os.listdir(path)
print(mylist)

for cl in mylist:
    images.append(cv2.imread(f'{path}/{cl}'))
    classnames.append(os.path.splitext(cl)[0])

print(classnames)
def encode(images):
    encodelist = []
    for img in images:
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        encodeimg = face_recognition.face_encodings(img)[0]
        encodelist.append(encodeimg)
    return encodelist

known = encode(images)
print("encoding complete")

def find_face():
    pass

def markAttendence(name):
    with open('attendence.csv','r+') as f:
        mydatalist = f.readlines()
        namelist = []
        for line in mydatalist:
            entry = line.split(',')
            namelist.append(entry[0])
        if name not in namelist:
            now = datetime.now()
            dtstring = now.strftime('%H:%M:%S')
            f.writelines(f'\n{name},{dtstring}')

cap = cv2.VideoCapture(0)
while True:
    success,img = cap.read()
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    imgs = cv2.resize(img,(0,0),None,0.25,0.25)
    imgs = cv2.cvtColor(imgs,cv2.COLOR_BGR2RGB)

    faces = face_recognition.face_locations(imgs)
    encodeimg = face_recognition.face_encodings(imgs,faces)

    for encodeface,faceloc in zip(encodeimg,faces):
        matches = face_recognition.compare_faces(known,encodeface)
        facedis = face_recognition.face_distance(known,encodeface)
        #print(facedis)
        matchIndex = np.argmin(facedis)
        y1, x2, y2, x1 = faceloc
        y1, x2, y2, x1 = y1 * 4, x2 * 4, y2 * 4, x1 * 4

        cv2.rectangle(img, (x1, y1), (x2, y2), (255, 0, 0), 2)

        if matches[matchIndex]:


            name = classnames[matchIndex].upper()
            #print(name)

            cv2.rectangle(img,(x1,y1),(x2,y2),(0,255,0),2)
            cv2.rectangle(img,(x1,y2-35),(x2,y2),(0,255,0),cv2.FILLED)
            cv2.putText(img,name,(x1+6,y2-6),cv2.FONT_HERSHEY_DUPLEX,1,(255,255,255),2)
            markAttendence(name)

        else:
            print("match not found")

    cv2.imshow('Webcam',img)
    cv2.waitKey(1)




